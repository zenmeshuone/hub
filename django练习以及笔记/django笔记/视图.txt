insert into grades(gname,gdate,ggirlnum,gboynum,isDelete)values("python-01","2017-10-10",\
10,50,0),("python-02","2017-6-10",30,50,0),\
("python-03","2017-1-10",100,50,0),("python-04","2017-5-10",26,50,0);
insert into myApp_students(sname,sgender,sage,scontend,isDelete,sgrade_id)\
values("流量卡",0,80,"我叫",0,4),("的健康",0,80,"我叫的健康",0,4),\
("fi公司",1,50,"我叫",0,3),("的方式",0,65,"我叫",0,3),\
("房管局",0,87,"我叫",0,2),("大锅饭",0,64,"我叫",0,2),\
("十点零分",0,84,"我叫",0,1),("风格",0,85,"我叫",0,1),\
("共和国",1,80,"我叫",0,4),("对方公司",0,35,"我叫",0,4),\
("日日日",1,65,"我叫",0,3),("规划局",0,60,"我叫",0,3),\
("顶顶顶",1,15,"我叫",0,2),("为人体",0,50,"我叫",0,2),\
("小聪聪",1,58,"我叫",0,1),("风格和",0,50,"我叫",0,1);





视图：概述 ：作用：视图接受web请求，并相应web请求
		本质：视图是python中的函数
		相应：      1. 网页：重定向。错误视图：404，500
			2. JSON数据，
url配置：1.配置方法指定根级url配置文件:ROOT_URLCONF = 'project.urls'
	2.urlpatterns:一个url实例的列表
		     url对象：正则表达式，视图名称，名字
	3.url匹配正则的注意事项：        1.取值加( )
				2.匹配正则前不加反斜杠
				3.加r表示字符不转义
引入其他url配置：    1.在应用中创建url.py文件，定义本应用的url配置，在工程url.py文件中使用include(‘  ’)
		2.匹配过程
url的反向解析：        1.概述：视图，模板中使用了硬编码连接，在url配置时，生成动态链接的地址
	 	2.解决：在使用链接时，通过url配置的名称，动态生成url地址
		3.作用：使用url模板
试图函数：1. 定义视图：1.本质：函数
		 2.视图参数：1. request一个HttpRequest的实例  2.通过正则表达式获取的参数
		 3.位置：一般在view.py文件中定义
	 2. 错误视图：1. 404视图  ：在找不到网页(url匹配不成功)，在templates目录下定义 404.html，
				request_path(错误的网址)，配置setting.py ：DEBUG =False 表示调用404
				ALLOWED_HOSTS = ['*'](任何人访问)
		2. 500视图 ：在视图代码中出现错误(服务器代码) 
		3.400视图：错误出现在客户的操作
HttpRequest：概述：服务器接受http请求后，会根据报文创建HttpRequest对象，
		视图的第一个参数就是HttpRequest，
		django创建的，之后调用视图传递给视图。
	       属性：1.path :请求的完整路径，不包括域名，端口，
		 2.method：表示请求的方式，常用的GET，POST
		 3.encoding：表示浏览器提交的数据的编码方式：一般utf-8
		 4.GET：类似于字典的对象，包含了GET的请求的所有参数
		 5.POST：类似于字典的对象，包含了POST请求的所有参数
		 6.Files：类似于字典的对象，包含了所有上传的文件
		 7.cookies：字典，包含所有的cookie
		 8.session：类似字典的对象，表示当前的会话。
	        方法：is_ajax()  ：如果是通过XMLHttpRequest发起的
	        QueryDict：Request对象中的ＧＥＴ，ＰＯＳＴ都属于QueryDict对象
		           方法：get()作用：根据键获取值，getlist()将键的值作为列表形式返回
	        GET属性：获取服务器传递的参数     
 	        POST属性：使用表单实现ＰＯＳＴ请求
		           关闭crsf  在settings.py文件中MIDDLEWARE中注释掉'django.middleware.csrf.CsrfViewMiddleware'
HttpResponse对象：概述：给浏览器返回数据
		          HttpResponse对象是由django创建的，HttpResponse对象由程序员创建
		用法：不调用模板，直接返回数据：def index(request):
      					            return  HttpResponse("sdjkflksdjflkasdsdf")
           		            调用模板：用render方法：1.原型：render（request,templeteName[,context]
					     2.作用：结合数据和模板，返回完整的HTML页面
					     3.参数：Request ：请求体对象   
						  templateName ：模板路径 
						  context：传递给需要渲染在模板上的数据
     					     4.实例：def regist(request):
   						         return render(request,'myApp/ceshi.html')
		属性：1.content：表示返回的内容的类型
		          2.charset：编码格式
		          3.status_code：响应状态码：200.304.404
		          4.content-type：指定输出的ＭＩＭＥ类型
		方法：1.init ：使用页面内容实例化HttpResponse
		          2.write（content）：以文件的形式写入
		          3.flush（）：以文件的形式输出缓存区
		          4.set_cookie(key,value='',max_age=Noe,exprise=None)
		          5.delete_cookie(key):删除cookie 注意：如果删除一个不存在的key，什么也不发生
		子类HttpResponseRedirect：1.重定向，服务器端跳转   2.简写：  redirect（to）
		子类JsonResponse：1.返回json数据，一般用于异步请求  
				2. __init_(self.data) 
				3.data:字典
				4.注意：Content-type类型为application/json
状态保持：概述：1.http协议是无状态的，每次请求都是一次新的请求，不记得以前的请求。
	           2.客户端与服务器端的一次通信就是一次会话                                                                                                      
	           3.实现保持状态，在客户端或者服务器端存储有关的会话                                                                                       	          	           4.存储方式：cookie：所有数据都存储在客户端，不要存放敏感数据， 
		               session：  所有数据存储在服务端，在客户端用cookie存储session_id
	           5.状态保持的目的：在一段时间内跟踪请求者的状态，可以实现跨页面访问当前请求者的数据                       
	           6.注意：不同的请求者之间不会共享这个数据，与请求者是一一对应的关系                            
	 启用session：setting.py文件中，启用 INSTALLED_APPS中  'django.contrib.sessions'                                               
	                                                           MIDDLEWARE 中django.contrib.sessions.middleware.SessionMiddleware'    
	 使用session：启用session后，每个HttpRequest对象都有一个session属性，类似字典的对象                                                     		      get(key,default=None) :根据键值获取session值    
	                      clear( ):  清空所用会话                                                
	                      flush( )：  删除当前会话并删除会话的cookie
                                       
	  设置过期时间：1.set_expiry(value)                                                                    
	                          2.不设置就是默认15天                                     
	                                                                                                                
	                                                                     
















